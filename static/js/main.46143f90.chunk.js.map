{"version":3,"sources":["assets/pokebola.svg","assets/load.svg","store/pokemons/index.js","store/index.js","store/pokemons/actionTypes.js","appsettings.js","store/pokemons/actions.js","components/Sidebar/index.js","components/Load/index.js","utils/functions.js","pages/ListPokemons/index.js","pages/DetailsPokemon/index.js","routes/index.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","list","loading","pokemon","combineReducers","pokemons","state","action","type","payload","endpoint","listPokemons","dispatch","a","graphQLClient","GraphQLClient","request","data","console","log","searchPokemon","name","query","response","Sidebar","history","useHistory","useDispatch","useState","pokemonName","setPokemonName","className","to","src","pokebola","onSubmit","e","preventDefault","length","push","autoFocus","placeholder","value","onChange","target","onClick","getTypeEspecifications","especifications","color","toUpperCase","background","useSelector","PokemonCard","image","types","id","style","textDecoration","map","index","key","backgroundColor","useEffect","Load","useParams","getPokemonDetails","attacks","fast","atack","damage","special","evolutions","position","bottom","exact","path","DetailsPokemon","store","createStore","applyMiddleware","ReduxThunk","basename","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.46143f90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokebola.2f044472.svg\";","module.exports = __webpack_public_path__ + \"static/media/load.bc3bf623.svg\";","import * as ActionTypes from './actionTypes';\r\n\r\nconst INITIAL_STATE = { list: [], loading: false, pokemon: null };\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.LIST_POKEMONS:\r\n      return {\r\n        ...state,\r\n        list: action.payload,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.LOAD_POKEMONS_LIST:\r\n      return { ...state, loading: true };\r\n    case ActionTypes.LOAD_POKEMON_DETAILS:\r\n      return { ...state, loading: false, pokemon: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport pokemons from './pokemons';\r\n\r\nexport default combineReducers({\r\n  pokemons,\r\n});\r\n","export const ADD_POKEMON = 'ADD_POKEMON';\r\nexport const LIST_POKEMONS = 'LIST_POKEMONS';\r\nexport const LOAD_POKEMONS_LIST = 'LOAD_POKEMONS_LIST';\r\nexport const LOAD_POKEMON_DETAILS = 'LOAD_POKEMON_DETAILS';\r\n","export const endpoint = 'https://graphql-pokemon.now.sh/';\r\n","import * as ActionTypes from './actionTypes';\r\nimport { GraphQLClient } from 'graphql-request';\r\nimport { endpoint } from '../../appsettings';\r\n\r\nexport function listPokemons() {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ActionTypes.LOAD_POKEMONS_LIST });\r\n      const query = `{\r\n      pokemons(first: 100) {\r\n        id\r\n        name\r\n        image\r\n        types\r\n      }\r\n    }`;\r\n      const graphQLClient = new GraphQLClient(endpoint);\r\n      const data = await graphQLClient.request(query);\r\n      if (data)\r\n        dispatch({ type: ActionTypes.LIST_POKEMONS, payload: data.pokemons });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n}\r\n\r\nexport function searchPokemon(name) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: ActionTypes.LOAD_POKEMONS_LIST });\r\n    let query = '';\r\n    if (name) {\r\n      query = `{\r\n      pokemon(name: \"${name}\") {\r\n        id\r\n        name\r\n        image\r\n        types\r\n      }\r\n    }\r\n    `;\r\n\r\n      const graphQLClient = new GraphQLClient(endpoint);\r\n      const data = await graphQLClient.request(query);\r\n      const response = data.pokemon ? [data.pokemon] : [];\r\n      dispatch({\r\n        type: ActionTypes.LIST_POKEMONS,\r\n        payload: response,\r\n      });\r\n    } else dispatch(listPokemons());\r\n  };\r\n}\r\n\r\nexport function getPokemonDetails(name) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: ActionTypes.LOAD_POKEMONS_LIST });\r\n    const query = `{\r\n      pokemon(name: \"${name}\") {\r\n        id\r\n        name\r\n        image\r\n        types\r\n        evolutions {\r\n          id\r\n          image\r\n          name\r\n        }\r\n        attacks {\r\n          fast {\r\n            name\r\n            damage\r\n          }\r\n          special {\r\n            name\r\n            damage\r\n          }\r\n        }\r\n      }\r\n  }`;\r\n\r\n    const graphQLClient = new GraphQLClient(endpoint);\r\n    const data = await graphQLClient.request(query);\r\n    dispatch({ type: ActionTypes.LOAD_POKEMON_DETAILS, payload: data.pokemon });\r\n  };\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchPokemon } from '../../store/pokemons/actions';\r\nimport './styles.css';\r\nimport pokebola from '../../assets/pokebola.svg';\r\n\r\nconst Sidebar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [pokemonName, setPokemonName] = useState('');\r\n\r\n  function handlerSearch(e) {\r\n    e.preventDefault();\r\n    if (pokemonName.length > 3) {\r\n      dispatch(searchPokemon(pokemonName));\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  function handlerClearForm(e) {\r\n    e.preventDefault();\r\n    setPokemonName('');\r\n    dispatch(searchPokemon(''));\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"container-space\">\r\n        <Link to=\"/\">\r\n          <img src={pokebola} className=\"pokebola\" />\r\n        </Link>\r\n      </div>\r\n      <section className=\"search-bar\">\r\n        <form onSubmit={handlerSearch}>\r\n          <input\r\n            autoFocus\r\n            type=\"text\"\r\n            placeholder=\"Digite o nome de um super pokémon...\"\r\n            value={pokemonName}\r\n            onChange={(e) => setPokemonName(e.target.value)}\r\n          />\r\n        </form>\r\n        {pokemonName.length > 0 && (\r\n          <button className=\"close-icon\" onClick={handlerClearForm}>\r\n            x\r\n          </button>\r\n        )}\r\n      </section>\r\n      <div className=\"container-space\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport pokebola from '../../assets/load.svg';\r\nimport './styles.css';\r\n\r\nexport default () => (\r\n  <div className=\"container-load\">\r\n    <img className=\"load-spinner\" src={pokebola} />\r\n  </div>\r\n);\r\n","export function getTypeEspecifications(type) {\r\n  const TYPE_PATERN = type.toUpperCase();\r\n  const especifications = { color: '#fff' };\r\n  switch (TYPE_PATERN) {\r\n    case 'POISON':\r\n      especifications.background = '#682A68';\r\n      break;\r\n    case 'GRASS':\r\n      especifications.background = '#7DB808';\r\n      break;\r\n    case 'FIRE':\r\n      especifications.background = '#E24242';\r\n      break;\r\n    case 'WATER':\r\n      especifications.background = '#5BC7E5';\r\n      break;\r\n    case 'BUG':\r\n      especifications.background = '#A8B820';\r\n      break;\r\n    case 'FLYING':\r\n      especifications.background = '#A890F0';\r\n      break;\r\n    case 'NORMAL':\r\n      especifications.background = '#A8A878';\r\n      break;\r\n    case 'ELECTRIC':\r\n      especifications.background = '#F8D030';\r\n      break;\r\n    case 'GROUND':\r\n      especifications.background = '#E0C068';\r\n      break;\r\n    case 'FAIRY':\r\n      especifications.background = '#E03A83';\r\n      break;\r\n    case 'FIGHTING':\r\n      especifications.background = '#FF501F';\r\n      break;\r\n    case 'PSYCHIC':\r\n      especifications.background = '#A65E9A';\r\n      break;\r\n    case 'ROCK':\r\n      especifications.background = '#B8A038';\r\n      break;\r\n    case 'STEEL':\r\n      especifications.background = '#B8B8D0';\r\n      break;\r\n    case 'ICE':\r\n      especifications.background = '#98D8D8';\r\n      break;\r\n    case 'GHOST':\r\n      especifications.background = '#705898';\r\n      break;\r\n\r\n    default:\r\n      especifications.background = '#A8A878';\r\n      break;\r\n  }\r\n  return especifications;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listPokemons } from '../../store/pokemons/actions';\r\nimport './styles.css';\r\nimport Load from '../../components/Load';\r\nimport { getTypeEspecifications } from '../../utils/functions';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const pokemons = useSelector((state) => state.pokemons.list);\r\n  const loading = useSelector((state) => state.pokemons.loading);\r\n\r\n  useEffect(() => {\r\n    if (pokemons.length == 0) dispatch(listPokemons());\r\n  }, []);\r\n\r\n  function PokemonCard({ name, image, id, types }) {\r\n    return (\r\n      <Link to={`/details/${name}`} style={{ textDecoration: 'none' }}>\r\n        <div className=\"card-pokemon\">\r\n          <div className=\"container-image\">\r\n            <img src={image} />\r\n          </div>\r\n          <div className=\"card-info\">\r\n            <h2 className=\"name-pokemon\">{name}</h2>\r\n            <div className=\"pokemon-type\">\r\n              {types.map((type, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"type-badge\"\r\n                  style={{\r\n                    backgroundColor: getTypeEspecifications(type).background,\r\n                  }}\r\n                >\r\n                  {type}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Load />\r\n      ) : (\r\n        <div className=\"container-list\">\r\n          {pokemons &&\r\n            pokemons.map((pokemon) => (\r\n              <PokemonCard\r\n                key={pokemon.id}\r\n                name={pokemon.name}\r\n                image={pokemon.image}\r\n                id={pokemon.id}\r\n                types={pokemon.types}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPokemonDetails } from '../../store/pokemons/actions';\r\nimport Load from '../../components/Load';\r\nimport { getTypeEspecifications } from '../../utils/functions';\r\n\r\nimport './styles.css';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useParams();\r\n  const pokemon = useSelector((state) => state.pokemons.pokemon);\r\n  const loading = useSelector((state) => state.pokemons.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokemonDetails(name));\r\n  }, [name]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Load />\r\n      ) : (\r\n        <div className=\"card-pokemon-details\">\r\n          {pokemon && (\r\n            <>\r\n              <div className=\"container-image\">\r\n                <img src={pokemon.image} />\r\n              </div>\r\n              <div className=\"card-info\">\r\n                <h2 className=\"name-pokemon\">{pokemon.name}</h2>\r\n                <div className=\"pokemon-type\">\r\n                  {pokemon.types.map((type, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"type-badge\"\r\n                      style={{\r\n                        backgroundColor: getTypeEspecifications(type)\r\n                          .background,\r\n                      }}\r\n                    >\r\n                      {type}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <h2 className=\"name-pokemon\">Atacks</h2>\r\n                <section>\r\n                  {pokemon.attacks.fast && (\r\n                    <>\r\n                      <h4>Fast</h4>\r\n                      <div className=\"pokemon-attacks\">\r\n                        {pokemon.attacks.fast.map((atack) => (\r\n                          <>\r\n                            <div className=\"ability\">\r\n                              <h5>{atack.name}</h5>\r\n                              <p>Damage: {atack.damage}</p>\r\n                            </div>\r\n                          </>\r\n                        ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {pokemon.attacks.special && (\r\n                    <>\r\n                      <h4>Special</h4>\r\n                      <div className=\"pokemon-attacks\">\r\n                        {pokemon.attacks.special.map((atack) => (\r\n                          <>\r\n                            <div className=\"ability\">\r\n                              <h5>{atack.name}</h5>\r\n                              <p>Damage: {atack.damage}</p>\r\n                            </div>\r\n                          </>\r\n                        ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </section>\r\n                {pokemon.evolutions && (\r\n                  <>\r\n                    <h2 className=\"name-pokemon\">Evolutions</h2>\r\n                    <div className=\"evolutions\">\r\n                      {pokemon.evolutions.map((pokemon) => (\r\n                        <Link\r\n                          key={pokemon.id}\r\n                          to={`/details/${pokemon.name}`}\r\n                          style={{ textDecoration: 'none' }}\r\n                        >\r\n                          <div className=\"evolution-card\">\r\n                            <div className=\"teste\">\r\n                              <img src={pokemon.image} />\r\n                            </div>\r\n                            <div id=\"pokemon-name\">\r\n                              <h5 style={{ position: 'relative', bottom: 0 }}>\r\n                                {pokemon.name}\r\n                              </h5>\r\n                            </div>\r\n                          </div>\r\n                        </Link>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { ListPokemon, DetailsPokemon } from '../pages';\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <ListPokemon />\r\n      </Route>\r\n      <Route path=\"/details/:name\">\r\n        <DetailsPokemon />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport combineReducers from './store/index';\nimport Sidebar from './components/Sidebar';\nimport './styles/custom.css';\n\nimport Routes from './routes';\nexport default () => {\n  return (\n    <Provider\n      store={createStore(combineReducers, applyMiddleware(ReduxThunk))}\n      basename=\"/pokedex-with-graphql/\"\n    >\n      <Router>\n        <Sidebar />\n        <div className=\"container-body\">\n          <Routes />\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}